name: Deploy para Kubernetes

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Versão da imagem a ser implantada (formato: X.Y.Z)'
        required: true
        default: '1.0.0'
        type: string

jobs:
  deploy:
    name: Deploy para DOKS
    runs-on: ubuntu-latest

    steps:
    - name: Checkout do código
      uses: actions/checkout@v4

    - name: Configurar kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Configurar KUBECONFIG
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 -d > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Atualizar Tag da Imagem no deployment.yaml
      run: |
        echo "Instalando yq..."
        sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq && sudo chmod +x /usr/bin/yq
        echo "Atualizando a imagem em infra/k8s/app/deployment.yaml para a versão ${{ inputs.version }}..."
        yq -i '.spec.template.spec.containers[0].image = "registry.digitalocean.com/urbana-connect-registry/urbana-connect:${{ inputs.version }}"' infra/k8s/app/deployment.yaml
        echo "Conteúdo atualizado do deployment.yaml:"
        cat infra/k8s/app/deployment.yaml

    - name: Aplicar Manifestos K8s
      run: |
        echo "Aplicando manifestos do diretório infra/k8s/app/..."
        kubectl apply -f infra/k8s/app/ -n urbana-connect
        echo "Manifestos aplicados."

    - name: Verificar status do rollout
      run: |
        echo "Verificando o status do rollout do deployment urbana-connect..."
        kubectl rollout status deployment/urbana-connect -n urbana-connect --timeout=180s
        echo "Rollout concluído." 