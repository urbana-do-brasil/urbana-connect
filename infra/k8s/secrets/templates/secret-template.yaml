# ATENÇÃO: Este é um TEMPLATE. NÃO aplique este arquivo diretamente.
# Ele serve como guia para criar o Secret real com seus dados sensíveis.
#
# Como criar o Secret real:
# 1. Substitua os valores placeholder abaixo pelos seus dados reais.
# 2. Use kubectl para criar o Secret a partir dos literais:
#    kubectl create secret generic urbana-connect-secrets \
#      --namespace=urbana-connect \
#      --from-literal=DATABASE_URL='jdbc:postgresql://seu_host:5432/sua_db' \
#      --from-literal=DATABASE_USERNAME='seu_usuario' \
#      --from-literal=DATABASE_PASSWORD='sua_senha_super_secreta' \
#      --from-literal=WHATSAPP_API_TOKEN='seu_token_whatsapp' \
#      --from-literal=OUTRA_API_KEY='sua_outra_chave_secreta'
#      # Adicione mais --from-literal para cada segredo necessário
#
# O Deployment 'urbana-connect' já está configurado para carregar
# variáveis de ambiente a partir deste Secret.

apiVersion: v1
kind: Secret
metadata:
  name: urbana-connect-secrets # O nome deve corresponder ao secretRef no Deployment
  namespace: urbana-connect
type: Opaque # Tipo padrão para segredos arbitrários
stringData: # Use stringData para facilitar a leitura no template. O Kubernetes armazenará como base64.
  # Credenciais do Banco de Dados (Exemplo PostgreSQL)
  DATABASE_URL: "jdbc:postgresql://PLACEHOLDER_DB_HOST:5432/PLACEHOLDER_DB_NAME"
  DATABASE_USERNAME: "PLACEHOLDER_DB_USER"
  DATABASE_PASSWORD: "PLACEHOLDER_DB_PASSWORD"

  # Chaves de API
  WHATSAPP_API_TOKEN: "PLACEHOLDER_WHATSAPP_TOKEN"
  # Adicione outras chaves de API aqui
  # OUTRA_API_KEY: "PLACEHOLDER_OUTRA_CHAVE"

  # Outros segredos da aplicação
  # EXEMPLO_SEGREDO: "valor_secreto" 